#======================================================;
#some variables's definition
loader_file_size = 1536

#floppy disk image file
floppy = empty.img 

#position where the floppy disk will be mounted
floppy_mount = ../FloppyDisk

#currently we use floppy disk as target disk
disk = $(floppy)
disk_mount = $(floppy_mount)

#the virtual machine configure's position
vm_con = vm_config

debugger = bochs
debugger_con = -f $(vm_con)/boot

#the compilers 
asm = nasm

#=====================================================;


.phony: nop bt clean debug write
nop   : 
	@echo "attributes:"
	@echo "clean     : clean all of the binary files generated by compiler"
	@echo "bt      : compile the boot program(loader program and boot program)"
	@echo "write     : write the program into the floppy disk"
	@echo "debug     : debug the system with the bochs virtual machine"
clean : 
	@rm bin/*.bin

debug :
	@$(debugger) $(debugger_con)

bt :
	@$(asm) boot/boot.asm   -f bin -o bin/boot.bin
	@$(asm) boot/loader.asm -f bin -o bin/loader.bin
write :
	@sudo dd if=bin/boot.bin of=$(disk) bs=512 count=1 conv=notrunc
	@sudo mount -o loop $(disk) $(disk_mount)
	@sudo dd if=bin/loader.bin of=$(disk_mount)/loader.bin bs=$(loader_file_size) count=1 conv=notrunc
	@sudo umount $(disk_mount)

